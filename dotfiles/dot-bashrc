BASHRC_INCLUDED=1
PROMPT_COMMAND=
. ${HOME}/.profile

if [ -e ${HOME}/.pijulconfig/bash ]
then
    . ${HOME}/.pijulconfig/bash
fi

#if [ -d "${HOME}/.asdf" ]
#then
#    . "${HOME}/.asdf/asdf.sh"
#fi

#eval "$(~/.local/bin/rtx activate -s bash)"

export PS1='\W $ '

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if [ -f ~/.shell_aliases ]; then
    . ~/.shell_aliases
fi

if [ "$TERM" = "linux" ]; then
    echo -en "\e]P0222222" #black
    echo -en "\e]P8222222" #darkgrey
    echo -en "\e]P1803232" #darkred
    echo -en "\e]P9982b2b" #red
    echo -en "\e]P25b762f" #darkgreen
    echo -en "\e]PA89b83f" #green
    echo -en "\e]P3aa9943" #brown
    echo -en "\e]PBefef60" #yellow
    echo -en "\e]P4324c80" #darkblue
    echo -en "\e]PC2b4f98" #blue
    echo -en "\e]P5706c9a" #darkmagenta
    echo -en "\e]PD826ab1" #magenta
    echo -en "\e]P692b19e" #darkcyan
    echo -en "\e]PEa1cdcd" #cyan
    echo -en "\e]P7ffffff" #lightgrey
    echo -en "\e]PFdedede" #white
    clear #for background artifacting
fi

command -v vg >/dev/null 2>&1 && eval "$(vg eval --shell bash)"

. /usr/share/bash-completion/completions/git
# added by travis gem
[ -f ${HOME}/.travis/travis.sh ] && source ${HOME}/.travis/travis.sh

PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"${HOME}/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"; export PERL_MM_OPT;

pchanged

update_ps1() {
    __ups1_lastcmd="${?}"
    __ups1_default_colors='\[\e[0;34m\]'
    __ups1_bold='\[\e[1m\]'
    __ups1_italic='\[\e[3m\]'
    __ups1_underlined='\[\e[4m\]'
    __ups1_reset_colors='\[\e[0m\]'
    __ups1_red='\[\e[31m\]'
    __ups1_blue='\[\e[34m\]'
    __ups1_black='\[\e[30m\]'
    __ups1_green='\[\e[32m\]'
    __ups1_yellow='\[\e[33m\]'
    __ups1_magenta='\[\e[35m\]'
    __ups1_cyan='\[\e[36m\]'
    __ups1_white='\[\e[37m\]'

    __ups1_info=""
    __ups1_info_pref=""
    __ups1_info_suff=""

    __ups1_marker_pref="${__ups1_blue}"
    __ups1_marker="$"
    __ups1_marker_suff="${__ups1_reset_colors}${__ups1_default_colors}"
    if [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]
    then
        __ups1_info="$(git branch --color=never | \
            awk '/^[*]/{print $2}')"
        if git status --porcelain | grep -E -q '^.*$'
        then
            __ups1_marker="&"
            __ups1_marker_pref="${__ups1_yellow}"
        fi
    fi

    if [ "${__ups1_lastcmd}" -eq 0 ]
    then
        __ups1_stat_pref="${__ups1_green}"
        __ups1_stat_suff="${__ups1_reset_colors}${__ups1_default_colors}"
    else
        __ups1_stat_pref="${__ups1_underlined}${__ups1_red}"
        __ups1_stat_suff="${__ups1_reset_colors}${__ups1_default_colors}"
    fi

    if which rtx >/dev/null 2>&1
    then
        eval "$(rtx env -s bash)"
    fi
    __ups1_time_width=8
    __ups1_time="$(date +'%H:%M:%S')"
    __ups1_ancestor_pref="${__ups1_blue}"
    __ups1_ancestor_suff="${__ups1_reset_colors}${__ups1_default_colors}"
    if [ "${PWD}" = "${HOME}" ]
    then
        __ups1_dir="~"
        __ups1_ancestor=""
    else
        __ups1_ancestor=$(echo "${PWD}" | sed \
            -e 's|/*$||' \
            -e "s|^${HOME}|~|" \
            -e 's|\([^/]\)[^/]*/|\1/|g' \
            -e 's|/[^/]*$|/|')
        __ups1_dir=$(echo "${PWD}" | sed \
            -e 's|[^/]*/||g')
    fi
    __ups1_dir_pref="${__ups1_bold}${__ups1_magenta}"
    __ups1_dir_suff="${__ups1_reset_colors}${__ups1_default_colors}"
    __ups1_time_pref="${__ups1_blue}"
    __ups1_time_suff="${__ups1_reset_colors}${__ups1_default_colors}"
    if [ -n "${__ups1_info}" ]
    then
        __ups1_info_pref="${__ups1_cyan}${__ups1_italic}"
        __ups1_info_suff="${__ups1_reset_colors}${__ups1_default_colors} "
    fi
    PS1="$(printf "%s %s%-3d%s %s%s%s %s%s%s%s%s%s %s%s%s%s%s%s %s" \
            "${__ups1_default_colors}" \
            "${__ups1_stat_pref}" \
            "${__ups1_lastcmd}" \
            "${__ups1_stat_suff}" \
            "${__ups1_time_pref}" \
            "${__ups1_time}" \
            "${__ups1_time_suff}" \
            "${__ups1_ancestor_pref}" \
            "${__ups1_ancestor}" \
            "${__ups1_ancestor_suff}" \
            "${__ups1_dir_pref}" \
            "${__ups1_dir}" \
            "${__ups1_dir_suff}" \
            "${__ups1_info_pref}" \
            "${__ups1_info}" \
            "${__ups1_info_suff}" \
            "${__ups1_marker_pref}" \
            "${__ups1_marker}" \
            "${__ups1_marker_suff}" \
            "${__ups1_reset_colors}" \
                    )"
    return "${__ups1_lastcmd}"
}

export PROMPT_COMMAND="update_ps1${PROMPT_COMMAND:+;$PROMPT_COMMAND}"
