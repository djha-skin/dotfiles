export HOME=/home/${USER}
#export PATH=${HOME}/.local/bin:/run/wrappers/bin:${HOME}/.nix-profile/bin:/nix/profile/bin:${HOME}/.local/state/nix/profile/bin:/etc/profiles/per-user/$(id -nu)/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin

base_path=${HOME}/.local/bin
for i in ${HOME}/perl5/bin /run/wrappers/bin ${HOME}/.nix-profile/bin /nix/profile/bin ${HOME}/.local/state/nix/profile/bin /etc/profiles/per-user/$(id -nu)/bin /nix/var/nix/profiles/default/bin /run/current-system/sw/bin /bin /usr/bin /usr/local/bin /usr/bin/site_perl /usr/bin/vendor_perl /usr/bin/core_perl /usr/games /usr/local/games /snap/bin /var/lib/flatpak/exports/bin /usr/sbin /bin
do
    if [ -d "${i}" ]
    then
        base_path="${base_path}:${i}"
    fi
done
export PATH="${base_path}"

. "${HOME}/.nix-profile/etc/profile.d/hm-session-vars.sh"

export PATH="${HOME}/.local/bin:${PATH}"
if ! echo "${PATH}" | grep -q -E '\.nix-profile'
then
    export PATH="${HOME}/.nix-profile/bin:${PATH}"
fi
export EDITOR="nvim"
export LANG="en_US.UTF-8"
export LOCALE="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export LANGUAGE="en_US:"
export RLWRAP_EDITOR="nvim '+call cursor(%L,%C)'"
export LESS="-Q --no-vbell --use-color -r"
export PARINIT="rTbgqR B=*/-.,?'_A_a_@ Q=_s>| W=_S"
export NIXOS_OZONE_WL=1
export NIXPKGS_ALLOW_UNFREE=1

# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022
export PROFILE_INCLUDED=1
export home_altprefix="${HOME}/.apps"

export CARGO_HOME="${HOME}/.cargo"
if [ -d "${CARGO_HOME}" ]
then
    export PATH="${CARGO_HOME}/bin:${PATH}"
    . "$HOME/.cargo/env"
fi

if [ -n "${GEM_HOME}" ]
then
    export PATH="${GEM_HOME}/bin:${PATH}"
fi

if [ -n "${HOME}/.roswell" ]
then
    export PATH="${PATH}:${HOME}/.roswell/bin"
fi

if [ -d "${HOME}/.local/share/gem/ruby" ]
then
    for i in $(ls -1A ${HOME}/.local/share/gem/ruby)
    do
        if [ -d "${HOME}/.local/share/gem/ruby/${i}/bin" ]
        then
            export PATH="${HOME}/.local/share/gem/ruby/${i}/bin:${PATH}"
        fi
    done
fi

if [ -n "${KREW_ROOT}" ]
then
    export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
fi

export NPM_PACKAGES="${HOME}/.npm-packages"
if [ -d "${NPM_PACKAGES}" ]
then
    export PATH="${PATH}:${NPM_PACKAGES}/bin"
fi

export GOBIN="${HOME}/.local/bin"

if [ -n "${JAVA_HOME}" ]
then
    export PATH="${JAVA_HOME}/bin:${PATH}"
fi


export EDITOR="nvim"

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTCONTROL=ignoredups:ignorespace
export HISTSIZE=1000
export HISTFILESIZE=2000

if [ -f "${HOME}/.private_profile" ]
then
    . "${HOME}/.private_profile"
fi

# Preserve MANPATH if you already defined it somewhere in your config.
# Otherwise, fall back to `manpath` so we can inherit from `/etc/manpath`.
if ! echo "${MANPATH}" | grep -q "${NPM_PACKAGES}/share/man"
then
    export MANPATH="${MANPATH-$(manpath)}:$NPM_PACKAGES/share/man"
fi
if ! echo "${MANPATH}" | grep -q "${HOME}/.local/share/man"
then
    export MANPATH="${HOME}/.local/share/man:${MANPATH-$(manpath)}"
fi


export WORKING_LOCATION_FILE="${HOME}/.wdh.txt"

pchanged() {
    if [ -n "${WORKING_LOCATION_FILE:-}" -a -f "${WORKING_LOCATION_FILE:-}" ]
    then
        cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
    else
        echo "No directory on stack" >&2
    fi
}

ppopd() {
    if [ -n "${WORKING_LOCATION_FILE:-}" -a -f "${WORKING_LOCATION_FILE:-}" ]
    then
        python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" pop "${@}"
        cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
    else
        echo "No directory on stack" >&2
    fi
}


ppushd() {
    python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" push "${@}"
    cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
}

psetd() {
    python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" set "${@}"
    cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
}

plistd() {
    if [ -n "${WORKING_LOCATION_FILE:-}" -a -f "${WORKING_LOCATION_FILE:-}" ]
    then
        python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" list "${@}"
    else
        echo "No directory on stack" >&2
    fi
}

pcleard() {
    rm -f "${WORKING_LOCATION_FILE}"
    touch "${WORKING_LOCATION_FILE}"
}
