# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022
export PROFILE_INCLUDED=1
if [ -d /mingw64 ]
then
    export HOME="/home/bhw"
else
    export HOME="/home/skin"
fi
export home_altprefix="${HOME}/.apps"
export WARP_ENABLE_WAYLAND=1
# Set up PATH
if [ -d /mingw64 ]
then
    export PATH="${HOME}/.local/bin:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Users/bhw/.roswell/lisp/quicklisp/bin"
    export C_INCLUDE_PATH=/mingw64/include:/usr/include
    export LIBRARY_PATH=/mingw64/lib64:/mingw64/lib:/usr/lib64:/usr/lib
else
    export PATH="${HOME}/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
    export C_INCLUDE_PATH=/usr/include
    export LIBRARY_PATH=/usr/lib64:/usr/lib
fi
export LANG="en_US.UTF-8"
export LOCALE="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export LANGUAGE="en_US:"
export RLWRAP_EDITOR="nvim '+call cursor(%L,%C)'"
export LESS="-Q --no-vbell --use-color -r"
#export LD_LIBRARY_PATH=${HOME}/.local/lib64:${HOME}/.local/lib:/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib

for i in $(ls -1A "${home_altprefix}")
do
    if [ -d "${home_altprefix}/${i}" ]
    then
        export PATH="${home_altprefix}/${i}:${PATH}"
        if [ -d "${home_altprefix}/${i}/bin" ]
        then
            export PATH="${home_altprefix}/${i}/bin:${PATH}"
            if [ -f "${home_altprefix}/${i}/bin/java" ]
            then
                export JAVA_HOME="${home_altprefix}/${i}"
            fi
        fi
        if [ -d "${home_altprefix}/${i}/lib64" ]
        then
            export LD_LIBRARY_PATH="${home_altprefix}/${i}/lib64:${LD_LIBRARY_PATH}"
        fi
        if [ -d "${home_altprefix}/${i}/lib" ]
        then
            export LD_LIBRARY_PATH="${home_altprefix}/${i}/lib:${LD_LIBRARY_PATH}"
        fi
    fi
done

export CARGO_HOME="${HOME}/.cargo"
if [ -d "${CARGO_HOME}" ]
then
    export PATH="${CARGO_HOME}/bin:${PATH}"
fi

if [ -n "${GEM_HOME}" ]
then
    export PATH="${GEM_HOME}/bin:${PATH}"
fi

if [ -n "${HOME}/.roswell" ]
then
    export PATH="${PATH}:${HOME}/.roswell/bin"
fi

if [ -d "${HOME}/.gem/ruby" ]
then
    for i in $(ls -1A ${HOME}/.gem/ruby)
    do
        if [ -d "${HOME}/.gem/ruby/${i}/bin" ]
        then
            export PATH="${HOME}/.gem/ruby/${i}/bin:${PATH}"
        fi
    done
fi

if [ -n "${KREW_ROOT}" ]
then
    export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
fi

export NPM_PACKAGES="${HOME}/.npm-packages"
if [ -d "${NPM_PACKAGES}" ]
then
    export PATH="${PATH}:${NPM_PACKAGES}/bin"
fi

export GOBIN="${HOME}/.local/bin"

if [ -n "${JAVA_HOME}" ]
then
    export PATH="${JAVA_HOME}/bin:${PATH}"
fi

#. <(rtx env)

export EDITOR="nvim"
export ALTERNATE_EDITOR=""
export BROWSER="qutebrowser"

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTCONTROL=ignoredups:ignorespace
export HISTSIZE=1000
export HISTFILESIZE=2000

if [ -f "${HOME}/.private_profile" ]
then
    . "${HOME}/.private_profile"
fi

# Preserve MANPATH if you already defined it somewhere in your config.
# Otherwise, fall back to `manpath` so we can inherit from `/etc/manpath`.
if ! echo "${MANPATH}" | grep -q "${NPM_PACKAGES}/share/man"
then
    export MANPATH="${MANPATH-$(manpath)}:$NPM_PACKAGES/share/man"
fi
if ! echo "${MANPATH}" | grep -q "${HOME}/.local/share/man"
then
    export MANPATH="${HOME}/.local/share/man:${MANPATH-$(manpath)}"
fi

export PARINIT="rTbgqR B=*/-.,?'_A_a_@ Q=_s>| W=_S"

export WORKING_LOCATION_FILE="${HOME}/.wdh.txt"

gpgconf --launch gpg-agent
unset SSH_AGENT_PID
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)

export QT_SCALE_FACTOR_ROUNDING_POLICY=Round
export QT_ENABLE_HIGHDPI_SCALING=1

pchanged() {
    if [ -n "${WORKING_LOCATION_FILE:-}" -a -f "${WORKING_LOCATION_FILE:-}" ]
    then
        cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
    else
        echo "No directory on stack" >&2
    fi
}

ppopd() {
    if [ -n "${WORKING_LOCATION_FILE:-}" -a -f "${WORKING_LOCATION_FILE:-}" ]
    then
        python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" pop "${@}"
        cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
    else
        echo "No directory on stack" >&2
    fi
}


ppushd() {
    python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" push "${@}"
    cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
}

psetd() {
    python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" set "${@}"
    cd "$(python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" peek "${@}")"
}

plistd() {
    if [ -n "${WORKING_LOCATION_FILE:-}" -a -f "${WORKING_LOCATION_FILE:-}" ]
    then
        python3 "${HOME}/.local/bin/wdh.py" -p "${WORKING_LOCATION_FILE}" list "${@}"
    else
        echo "No directory on stack" >&2
    fi
}

pcleard() {
    rm -f "${WORKING_LOCATION_FILE}"
    touch "${WORKING_LOCATION_FILE}"
}
